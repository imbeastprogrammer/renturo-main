{
    "openapi": "3.0.0",
    "info": {
        "title": "Renturo API Documentation",
        "description": "Comprehensive API documentation for Renturo - Multi-tenant Property Rental Platform. This API serves three main applications: Client App (Property Owners), User App (Renters), and Admin Web Dashboard.",
        "contact": {
            "email": "support@renturo.com"
        },
        "license": {
            "name": "Proprietary",
            "url": "https://renturo.com/license"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://main.renturo.test",
            "description": "Local Development Server (Tenant)"
        },
        {
            "url": "http://renturo.test",
            "description": "Local Development Server (Central)"
        },
        {
            "url": "https://renturo.ngrok.app",
            "description": "Local Development Server (Mobile via ngrok)"
        },
        {
            "url": "https://api.renturo.com",
            "description": "Production API Server"
        },
        {
            "url": "{tenant}.renturo.test",
            "description": "Tenant Admin Server",
            "variables": {
                "tenant": {
                    "default": "main",
                    "description": "Tenant subdomain"
                }
            }
        }
    ],
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Authenticate user and return access token with OTP sent to mobile",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email, phone number, or username",
                                        "type": "string",
                                        "format": "email",
                                        "example": "owner@main.renturo.test"
                                    },
                                    "password": {
                                        "description": "User password (minimum 8 characters)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Login successful, OTP sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Verification code was sent to your mobile number."
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "owner@main.renturo.test"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "beastowner1234"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "OWNER"
                                                        },
                                                        "mobile_number": {
                                                            "type": "string",
                                                            "example": "+639123456789"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "verification_code": {
                                                    "description": "4-digit OTP (temporary in response, will be removed)",
                                                    "type": "string",
                                                    "example": "1234"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGc..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Logout",
                "description": "Revoke the current user's access token",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/resend/mobile/verification": {
            "post": {
                "tags": [
                    "Mobile Verification"
                ],
                "summary": "Resend Mobile Verification Code",
                "description": "Request a new verification code to be sent to the user's mobile number. Rate limited to prevent abuse.",
                "operationId": "resendMobileVerification",
                "responses": {
                    "201": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "The verification code for your mobile has been sent to the number +639123456789."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests - Rate limited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Too many request for verification code. Please retry after waiting for 300 seconds."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/verify/mobile": {
            "put": {
                "tags": [
                    "Mobile Verification"
                ],
                "summary": "Verify Mobile Number",
                "description": "Verify the user's mobile number using the verification code sent via SMS/Email",
                "operationId": "verifyMobile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "4-digit verification code",
                                        "type": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mobile number verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Your mobile phone number has been successfully verified."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid or expired verification code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "The code is either not valid or has expired."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories with subcategories",
                "description": "Retrieve a list of all categories along with their subcategories. This endpoint returns all active categories that are not soft-deleted.",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Categories successfully fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories was successfully fetched."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Residential"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-15T10:30:00.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-01-15T10:30:00.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "sub_categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "category_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Apartment"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": "2024-01-15T10:30:00.000000Z"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": "2024-01-15T10:30:00.000000Z"
                                                                },
                                                                "deleted_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": null,
                                                                    "nullable": true
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Mobile number not verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "The mobile number has not been verified yet. Please check your mobile for the verification code."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category. Only accessible by authenticated users.",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Category name (unique)",
                                        "type": "string",
                                        "example": "Residential"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Residential"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The name field is required."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category",
                "description": "Retrieve a single category with its subcategories by ID",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category found."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Residential"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "sub_categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "category_id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Update an existing category by ID",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Category name (unique)",
                                        "type": "string",
                                        "example": "Residential Updated"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Residential Updated"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Soft delete a category by ID. This will not delete associated subcategories.",
                "operationId": "destroyCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/categories/search": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Search categories and subcategories",
                "description": "Search for categories by category name or subcategory name. The search is case-insensitive and requires a minimum of 3 characters. Returns a maximum of 10 results.",
                "operationId": "searchCategories",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search term (minimum 3 characters). Searches both category and subcategory names.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 3,
                            "example": "Resi"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results (empty array if query is less than 3 characters or no matches found)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Residential"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-15T10:30:00.000000Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-15T10:30:00.000000Z"
                                            },
                                            "deleted_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": null,
                                                "nullable": true
                                            },
                                            "sub_categories": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "category_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Apartment"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-15T10:30:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-15T10:30:00.000000Z"
                                                        },
                                                        "deleted_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": null,
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "example": [
                                    {
                                        "id": 1,
                                        "name": "Residential",
                                        "created_at": "2024-01-15T10:30:00.000000Z",
                                        "updated_at": "2024-01-15T10:30:00.000000Z",
                                        "deleted_at": null,
                                        "sub_categories": [
                                            {
                                                "id": 1,
                                                "category_id": 1,
                                                "name": "Apartment",
                                                "created_at": "2024-01-15T10:30:00.000000Z",
                                                "updated_at": "2024-01-15T10:30:00.000000Z",
                                                "deleted_at": null
                                            },
                                            {
                                                "id": 2,
                                                "category_id": 1,
                                                "name": "House",
                                                "created_at": "2024-01-15T10:30:00.000000Z",
                                                "updated_at": "2024-01-15T10:30:00.000000Z",
                                                "deleted_at": null
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Mobile number not verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "The mobile number has not been verified yet. Please check your mobile for the verification code."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/forms": {
            "get": {
                "tags": [
                    "Dynamic Forms"
                ],
                "summary": "Get all dynamic forms",
                "description": "Retrieve a list of all dynamic forms with their subcategories and categories",
                "operationId": "listDynamicForms",
                "responses": {
                    "200": {
                        "description": "Forms fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Forms fetched successfully."
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Apartment Rental Form"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Form for renting apartments"
                                                            },
                                                            "subcategory": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Apartment"
                                                                    },
                                                                    "category": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "integer",
                                                                                "example": 1
                                                                            },
                                                                            "name": {
                                                                                "type": "string",
                                                                                "example": "Residential"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/forms/subcategory/{subcategoryId}": {
            "get": {
                "tags": [
                    "Dynamic Forms"
                ],
                "summary": "Get forms by subcategory",
                "description": "Retrieve all dynamic forms for a specific subcategory",
                "operationId": "getFormsBySubcategory",
                "parameters": [
                    {
                        "name": "subcategoryId",
                        "in": "path",
                        "description": "ID of the subcategory",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forms fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Forms fetched successfully."
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Apartment Rental Form"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Form for renting apartments"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No forms found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No forms found for this subcategory."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/forms/{id}": {
            "get": {
                "tags": [
                    "Dynamic Forms"
                ],
                "summary": "Get form details",
                "description": "Retrieve a specific dynamic form with all its pages, fields, and submitted values if they exist",
                "operationId": "getFormDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "body": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Form was fetched successfully."
                                                },
                                                "data": {
                                                    "properties": {
                                                        "dynamic_form_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Apartment Rental Form"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Form for renting apartments"
                                                        },
                                                        "subcategory": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Apartment"
                                                                },
                                                                "category": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "example": 1
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "Residential"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "submission": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "dynamic_form_pages": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "dynamic_form_page_id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "Basic Information"
                                                                    },
                                                                    "sort_no": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "dynamic_form_fields": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "properties": {
                                                                                "field_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "input_field_label": {
                                                                                    "type": "string",
                                                                                    "example": "Full Name"
                                                                                },
                                                                                "input_field_name": {
                                                                                    "type": "string",
                                                                                    "example": "full_name"
                                                                                },
                                                                                "input_field_type": {
                                                                                    "type": "string",
                                                                                    "example": "text"
                                                                                },
                                                                                "is_required": {
                                                                                    "type": "boolean",
                                                                                    "example": true
                                                                                },
                                                                                "sort_no": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                },
                                                                                "data": {
                                                                                    "type": "object",
                                                                                    "nullable": true
                                                                                },
                                                                                "value": {
                                                                                    "type": "string",
                                                                                    "example": "John Doe"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Form not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "An error occurred while fetching the form."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Dynamic Forms"
                ],
                "summary": "Update form (Admin Only)",
                "description": "This endpoint is not available for clients as forms can only be updated by administrators",
                "operationId": "updateForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden - Admin only",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Forms can only be managed by administrators."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Dynamic Forms"
                ],
                "summary": "Delete form (Admin Only)",
                "description": "This endpoint is not available for clients as forms can only be deleted by administrators",
                "operationId": "deleteForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden - Admin only",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Forms can only be managed by administrators."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/forms/{id}/edit": {
            "get": {
                "tags": [
                    "Dynamic Forms"
                ],
                "summary": "Edit form (Not Supported)",
                "description": "This endpoint is not supported as forms can only be edited by administrators",
                "operationId": "editForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Method not supported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Method not supported."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/subcategories": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Get all subcategories",
                "description": "Retrieve a list of all subcategories with their parent categories",
                "operationId": "getSubCategories",
                "responses": {
                    "200": {
                        "description": "SubCategories successfully fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategories was successfully fetched."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Apartment"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "category": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Residential"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Create a new subcategory",
                "description": "Create a new subcategory under a specific category",
                "operationId": "storeSubCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_id",
                                    "name"
                                ],
                                "properties": {
                                    "category_id": {
                                        "description": "Parent category ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "SubCategory name",
                                        "type": "string",
                                        "example": "Apartment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "SubCategory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Apartment"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/subcategories/{id}": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Get a specific subcategory",
                "description": "Retrieve a single subcategory with its parent category by ID",
                "operationId": "showSubCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SubCategory ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubCategory found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory found."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Apartment"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "category": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Residential"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SubCategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Update a subcategory",
                "description": "Update an existing subcategory by ID",
                "operationId": "updateSubCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SubCategory ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "description": "Parent category ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "SubCategory name",
                                        "type": "string",
                                        "example": "Luxury Apartment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "SubCategory updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Luxury Apartment"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SubCategory not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Delete a subcategory",
                "description": "Soft delete a subcategory by ID",
                "operationId": "destroySubCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "SubCategory ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubCategory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "SubCategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/client/v1/categories/{categoryId}/subcategories": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Get subcategories by category",
                "description": "Retrieve all subcategories for a specific category",
                "operationId": "getSubCategoriesByCategory",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubCategories found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategories found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Apartment"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Mobile number not verified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form": {
            "get": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "List all dynamic forms",
                "description": "Get a paginated list of dynamic forms with their subcategories and categories",
                "operationId": "7cc9d75fabcf1529ccca969be656f899",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter forms by name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "subcategory",
                        "in": "query",
                        "description": "Filter forms by subcategory ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic Form was successfully fetched."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "subcategory": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "category": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "perPage": {
                                                    "type": "integer"
                                                },
                                                "currentPage": {
                                                    "type": "integer"
                                                },
                                                "lastPage": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch dynamic forms."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "Create a new dynamic form",
                "description": "Create a new dynamic form with name, description, and subcategory",
                "operationId": "381c666f1b26055aba1d7a181fb81980",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "subcategory_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the form",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the form",
                                        "type": "string"
                                    },
                                    "subcategory_id": {
                                        "description": "ID of the subcategory",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Form created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form was successfully created."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "subcategory_id": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "subcategory_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create dynamic form."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form/{id}": {
            "get": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "Get a specific dynamic form",
                "description": "Get detailed information about a dynamic form including its pages and fields",
                "operationId": "9b3154346dfcc9216c028d7d5286b0bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the dynamic form",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form was successfully fetched."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "subcategory": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "category": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "dynamicFormPages": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            },
                                                            "dynamicFormFields": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer"
                                                                        },
                                                                        "label": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch form."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "Update a dynamic form",
                "description": "Update a dynamic form's name, description, or subcategory",
                "operationId": "d914fe8000fd8be1f9751890a3e023b1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the dynamic form",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "New name for the form",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "New description for the form",
                                        "type": "string"
                                    },
                                    "subcategory_id": {
                                        "description": "New subcategory ID for the form",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Form updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form was successfully updated."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "subcategory_id": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "subcategory_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update form."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "Delete a dynamic form",
                "description": "Soft delete a dynamic form and its related pages and submissions",
                "operationId": "613689db8bb0b1959e6b32a346c32a8e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the dynamic form",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form was successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete form."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form/restore/{id}": {
            "post": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "Restore a deleted form",
                "description": "Restore a soft-deleted dynamic form and its related pages and submissions",
                "operationId": "bc179d47cf1845b5d295735f125a8fbd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the dynamic form",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form was successfully restored."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to restore form."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form/all/{id}": {
            "get": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "Get form pages and fields",
                "description": "Get detailed information about a form's pages and fields for the form builder",
                "operationId": "ae90e0082312ebed7af88db7877baa09",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the dynamic form",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with_trashed",
                        "in": "query",
                        "description": "Include soft deleted records",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form fetched successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "subcategory": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "category": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "pages": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            },
                                                            "sort_no": {
                                                                "type": "integer"
                                                            },
                                                            "fields": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer"
                                                                        },
                                                                        "label": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "required": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "sort_no": {
                                                                            "type": "integer"
                                                                        },
                                                                        "data": {
                                                                            "type": "object",
                                                                            "nullable": true
                                                                        },
                                                                        "created_by": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "created_at": {
                                                                            "type": "string",
                                                                            "format": "date-time"
                                                                        },
                                                                        "updated_at": {
                                                                            "type": "string",
                                                                            "format": "date-time"
                                                                        },
                                                                        "deleted_at": {
                                                                            "type": "string",
                                                                            "format": "date-time",
                                                                            "nullable": true
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "created_by": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "submissions_count": {
                                                    "type": "integer"
                                                },
                                                "created_by": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch dynamic form."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Dynamic Forms"
                ],
                "summary": "Update form pages and fields",
                "description": "Update a form's pages and fields in the form builder",
                "operationId": "416faefc92b11cdc711f78f67cc8108f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the dynamic form",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "dynamic_form_pages"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Form name",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Form description",
                                        "type": "string"
                                    },
                                    "dynamic_form_pages": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "title",
                                                "dynamic_form_fields"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Page ID (null for new pages)",
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "title": {
                                                    "description": "Page title",
                                                    "type": "string"
                                                },
                                                "sort_no": {
                                                    "description": "Page sort order (optional, will be set based on array index)",
                                                    "type": "integer"
                                                },
                                                "dynamic_form_fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "input_field_label",
                                                            "input_field_type",
                                                            "is_required"
                                                        ],
                                                        "properties": {
                                                            "id": {
                                                                "description": "Field ID (null for new fields)",
                                                                "type": "integer",
                                                                "nullable": true
                                                            },
                                                            "input_field_label": {
                                                                "description": "Field label",
                                                                "type": "string"
                                                            },
                                                            "input_field_type": {
                                                                "description": "Field type (text, textarea, select, radio, checkbox, file, etc.)",
                                                                "type": "string"
                                                            },
                                                            "is_required": {
                                                                "description": "Whether the field is required",
                                                                "type": "boolean"
                                                            },
                                                            "sort_no": {
                                                                "description": "Field sort order (optional, will be set based on array index)",
                                                                "type": "integer"
                                                            },
                                                            "data": {
                                                                "description": "Additional field data (options for select/radio/checkbox, validation rules for file uploads, etc.)",
                                                                "properties": {
                                                                    "options": {
                                                                        "description": "Options for select/radio/checkbox fields",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "min": {
                                                                        "description": "Minimum value for number fields",
                                                                        "type": "number"
                                                                    },
                                                                    "max": {
                                                                        "description": "Maximum value for number fields",
                                                                        "type": "number"
                                                                    },
                                                                    "step": {
                                                                        "description": "Step value for number fields",
                                                                        "type": "number"
                                                                    },
                                                                    "accept": {
                                                                        "description": "Accepted file types for file upload fields",
                                                                        "type": "string"
                                                                    },
                                                                    "maxSize": {
                                                                        "description": "Maximum file size in bytes for file upload fields",
                                                                        "type": "integer"
                                                                    },
                                                                    "pattern": {
                                                                        "description": "Regex pattern for text fields",
                                                                        "type": "string"
                                                                    },
                                                                    "placeholder": {
                                                                        "description": "Placeholder text for text/textarea fields",
                                                                        "type": "string"
                                                                    },
                                                                    "rows": {
                                                                        "description": "Number of rows for textarea fields",
                                                                        "type": "integer"
                                                                    },
                                                                    "cols": {
                                                                        "description": "Number of columns for textarea fields",
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Form updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                },
                                                "subcategory": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "category": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "pages": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            },
                                                            "sort_no": {
                                                                "type": "integer"
                                                            },
                                                            "fields": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer"
                                                                        },
                                                                        "label": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        },
                                                                        "required": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "sort_no": {
                                                                            "type": "integer"
                                                                        },
                                                                        "data": {
                                                                            "type": "object",
                                                                            "nullable": true
                                                                        },
                                                                        "created_by": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "created_at": {
                                                                            "type": "string",
                                                                            "format": "date-time"
                                                                        },
                                                                        "updated_at": {
                                                                            "type": "string",
                                                                            "format": "date-time"
                                                                        },
                                                                        "deleted_at": {
                                                                            "type": "string",
                                                                            "format": "date-time",
                                                                            "nullable": true
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "created_by": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "submissions_count": {
                                                    "type": "integer"
                                                },
                                                "created_by": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "deleted_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Data format error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update dynamic form."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Data format error: One or more input field type have data that cannot be saved."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form not found."
                                        },
                                        "error": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dynamic_form_pages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dynamic_form_pages.*.title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dynamic_form_pages.*.dynamic_form_fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dynamic_form_pages.*.dynamic_form_fields.*.input_field_label": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dynamic_form_pages.*.dynamic_form_fields.*.input_field_type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dynamic_form_pages.*.dynamic_form_fields.*.is_required": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dynamic_form_pages.*.dynamic_form_fields.*.data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update dynamic form."
                                        },
                                        "error": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form/fields": {
            "get": {
                "tags": [
                    "Admin Dynamic Form Fields"
                ],
                "summary": "List all form fields",
                "description": "Get a paginated list of form fields with their pages and forms",
                "operationId": "1219846cd520d7a15de65f74e80497a8",
                "parameters": [
                    {
                        "name": "page_id",
                        "in": "query",
                        "description": "Filter by page ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by field label or name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_trashed",
                        "in": "query",
                        "description": "Include soft deleted records",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "only_trashed",
                        "in": "query",
                        "description": "Show only soft deleted records",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form fields fetched successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "dynamic_form_page_id": {
                                                        "type": "integer"
                                                    },
                                                    "user_id": {
                                                        "type": "integer"
                                                    },
                                                    "input_field_label": {
                                                        "type": "string"
                                                    },
                                                    "input_field_name": {
                                                        "type": "string"
                                                    },
                                                    "input_field_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "heading",
                                                            "body",
                                                            "text",
                                                            "textarea",
                                                            "number",
                                                            "email",
                                                            "date",
                                                            "time",
                                                            "select",
                                                            "checkbox",
                                                            "radio",
                                                            "checklist",
                                                            "attachment",
                                                            "rating",
                                                            "password",
                                                            "multiselect",
                                                            "file",
                                                            "hidden",
                                                            "color",
                                                            "url",
                                                            "phone",
                                                            "currency",
                                                            "matrix",
                                                            "repeater"
                                                        ]
                                                    },
                                                    "is_required": {
                                                        "type": "boolean"
                                                    },
                                                    "sort_no": {
                                                        "type": "integer"
                                                    },
                                                    "data": {
                                                        "description": "Field-specific data",
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Dynamic Form Fields"
                ],
                "summary": "Create new form fields",
                "description": "Create one or more new form fields for a page",
                "operationId": "7827c1fc51e5e8dde7b96935a6b30afb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dynamic_form_page_id",
                                    "fields"
                                ],
                                "properties": {
                                    "dynamic_form_page_id": {
                                        "type": "integer"
                                    },
                                    "fields": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "input_field_label",
                                                "input_field_type"
                                            ],
                                            "properties": {
                                                "input_field_label": {
                                                    "type": "string"
                                                },
                                                "input_field_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "heading",
                                                        "body",
                                                        "text",
                                                        "textarea",
                                                        "number",
                                                        "email",
                                                        "date",
                                                        "time",
                                                        "select",
                                                        "checkbox",
                                                        "radio",
                                                        "checklist",
                                                        "attachment",
                                                        "rating",
                                                        "password",
                                                        "multiselect",
                                                        "file",
                                                        "hidden",
                                                        "color",
                                                        "url",
                                                        "phone",
                                                        "currency",
                                                        "matrix",
                                                        "repeater"
                                                    ]
                                                },
                                                "is_required": {
                                                    "type": "boolean"
                                                },
                                                "data": {
                                                    "description": "Field-specific data",
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Fields created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form fields created successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "dynamic_form_page_id": {
                                                        "type": "integer"
                                                    },
                                                    "user_id": {
                                                        "type": "integer"
                                                    },
                                                    "input_field_label": {
                                                        "type": "string"
                                                    },
                                                    "input_field_name": {
                                                        "type": "string"
                                                    },
                                                    "input_field_type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "heading",
                                                            "body",
                                                            "text",
                                                            "textarea",
                                                            "number",
                                                            "email",
                                                            "date",
                                                            "time",
                                                            "select",
                                                            "checkbox",
                                                            "radio",
                                                            "checklist",
                                                            "attachment",
                                                            "rating",
                                                            "password",
                                                            "multiselect",
                                                            "file",
                                                            "hidden",
                                                            "color",
                                                            "url",
                                                            "phone",
                                                            "currency",
                                                            "matrix",
                                                            "repeater"
                                                        ]
                                                    },
                                                    "is_required": {
                                                        "type": "boolean"
                                                    },
                                                    "sort_no": {
                                                        "type": "integer"
                                                    },
                                                    "data": {
                                                        "description": "Field-specific data",
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "fields.0.input_field_label": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The field label is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form/fields/{id}": {
            "put": {
                "tags": [
                    "Admin Dynamic Form Fields"
                ],
                "summary": "Update form fields",
                "description": "Update multiple form fields for a form page",
                "operationId": "1ab6f60b56505de92fb08b6793036681",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Form page ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dynamic_form_page_id",
                                    "fields"
                                ],
                                "properties": {
                                    "dynamic_form_page_id": {
                                        "type": "integer"
                                    },
                                    "fields": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "input_field_label",
                                                "input_field_name",
                                                "input_field_type",
                                                "is_required"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "input_field_label": {
                                                    "type": "string"
                                                },
                                                "input_field_name": {
                                                    "type": "string"
                                                },
                                                "input_field_type": {
                                                    "type": "string"
                                                },
                                                "is_required": {
                                                    "type": "boolean"
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Dynamic Form Fields"
                ],
                "summary": "Delete a form field",
                "description": "Soft delete a form field",
                "operationId": "4900c72b1e16ba8d4f4743b2c089b869",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Form field ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form/fields/restore/{id}": {
            "post": {
                "tags": [
                    "Admin Dynamic Form Fields"
                ],
                "summary": "Restore a deleted form field",
                "description": "Restore a soft-deleted form field",
                "operationId": "f69c7e326a76101a173a9804c7580d01",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Form field ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/form/pages/all": {
            "get": {
                "tags": [
                    "Admin Dynamic Form Pages"
                ],
                "summary": "List all form pages",
                "description": "Get a paginated list of dynamic form pages with their fields and form information",
                "operationId": "0a04a15d30a099fb66fa2952ade86428",
                "parameters": [
                    {
                        "name": "form_id",
                        "in": "query",
                        "description": "Filter pages by form ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to filter pages by title or form name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form pages fetched successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "dynamic_form_id": {
                                                                "type": "integer"
                                                            },
                                                            "user_id": {
                                                                "type": "integer"
                                                            },
                                                            "title": {
                                                                "type": "string"
                                                            },
                                                            "sort_no": {
                                                                "type": "integer"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "deleted_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch form pages."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/form/pages": {
            "post": {
                "tags": [
                    "Admin Dynamic Form Pages"
                ],
                "summary": "Create a new form page",
                "description": "Create a new dynamic form page with automatic sort order",
                "operationId": "ef695193f42ef0348a8a15ff6b0350e6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dynamic_form_id",
                                    "title"
                                ],
                                "properties": {
                                    "dynamic_form_id": {
                                        "description": "ID of the parent form",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "Title of the page",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Page created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form page created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "dynamic_form_id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "sort_no": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create form page."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/form/pages/{id}": {
            "put": {
                "tags": [
                    "Admin Dynamic Form Pages"
                ],
                "summary": "Update a form page",
                "description": "Update a dynamic form page with title and sort order management",
                "operationId": "b2f9e73fcd3e3b28b24823b6036ba16f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "New title for the page",
                                        "type": "string"
                                    },
                                    "sort_no": {
                                        "description": "New sort order for the page",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Page updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form page updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "dynamic_form_id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "sort_no": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update form page."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Form page not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update form page."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin Dynamic Form Pages"
                ],
                "summary": "Delete a form page",
                "description": "Soft delete a dynamic form page and reorder remaining pages",
                "operationId": "65d2bdd607678d2c1b0013ee959dad6e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form page to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form page deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete form page."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Form page not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete form page."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/form/pages/restore/{id}": {
            "post": {
                "tags": [
                    "Admin Dynamic Form Pages"
                ],
                "summary": "Restore a deleted form page",
                "description": "Restore a soft-deleted dynamic form page and set it as the last page",
                "operationId": "359c57f8a38742067264b510b7d77dba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the form page to restore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dynamic form page restored successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "dynamic_form_id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "title": {
                                                    "type": "string"
                                                },
                                                "sort_no": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "deleted_at": {
                                                    "type": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Page not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to restore form page."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Form page not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to restore form page."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/form/pages/reorder": {
            "post": {
                "tags": [
                    "Admin Dynamic Form Pages"
                ],
                "summary": "Reorder form pages",
                "description": "Update the sort order of multiple form pages in a single operation",
                "operationId": "1458ba44c48d03a4a6a44be163256f6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "form_id",
                                    "pages"
                                ],
                                "properties": {
                                    "form_id": {
                                        "description": "ID of the form whose pages are being reordered",
                                        "type": "integer"
                                    },
                                    "pages": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "sort_no"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Page ID",
                                                    "type": "integer"
                                                },
                                                "sort_no": {
                                                    "description": "New sort order position",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pages reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form pages reordered successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "form_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "pages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to reorder form pages."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel Passport OAuth2 security",
                "flows": {
                    "password": {
                        "authorizationUrl": "/oauth/authorize",
                        "tokenUrl": "/oauth/token",
                        "refreshUrl": "/oauth/token/refresh",
                        "scopes": {}
                    }
                }
            },
            "bearerAuth": {
                "type": "http",
                "description": "Enter your Bearer token in the format: Bearer {token}",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication endpoints (Login, Register, Verify, Password Reset)"
        },
        {
            "name": "Admin Dynamic Forms",
            "description": "API endpoints for managing dynamic forms in the admin interface"
        },
        {
            "name": "Admin Dynamic Form Fields",
            "description": "API endpoints for managing form fields in the admin interface"
        },
        {
            "name": "Admin Dynamic Form Pages",
            "description": "API endpoints for managing dynamic form pages in the admin interface"
        },
        {
            "name": "Mobile Verification",
            "description": "Mobile Verification"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Dynamic Forms",
            "description": "Dynamic Forms"
        },
        {
            "name": "SubCategories",
            "description": "SubCategories"
        }
    ]
}